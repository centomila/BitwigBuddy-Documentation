# üìã Changelog:

## 1.0.0 | **PRERELASE CHANGELOG**. Available only via source code!!!
- [X] üìô Manual!
  - The manual is available in the repository and in the zip file
- [X] ü¶ò **Skip Step Every X** in Program Mode
  - Skip a step every X steps
  - Example: Set Density at 100% and Skip Step Every X at 1 to create a 50% density pattern skipping all the odd steps
  - Example: Set Density at 100% and Skip Step Every X at 2 to create a 50% density pattern skipping all the even steps
  - Example: Set Density at 100% and Skip Step Every X at 3 to skip every third step in a pattern
- [X] ü•Å **Learn Note from selected drum pad**
  - Select _DM_ from the _Learn Note_ selection and click on a drum pad to set the note destination.
  - Works on any Bitwig Drum Machine device in tracks from 1 to 128.
- [X] ü™¢ **Presets and Custom are a single thing now**.
  - All default presets are txt files like the Custom Presets folder.
- [X] ‚ûï **Replace/Add Toggle**
  - Instead of erasing the current pattern, the new pattern is added to the existing pattern.
  - Try with program on low density + Post Action Duplicate Clip for interesting results.
- [X] üîÅ **Repeat Pattern X Times**
  - Repeat the pattern X times (1 to 8 times)
  - Default: 1
  - Example: If a pattern is 16 steps and you set Repeat Pattern to 2, the pattern will be 32 steps long.
  - Note: Max 128 steps! If the pattern is longer than 128 steps, the pattern will be truncated to 128 steps.
- [X] üíæ **Save Custom Presets**
  - Save the current pattern as a custom preset.
  - The custom presets are stored in the Custom Presets folder inside the BitwigBuddy folder as .txt files. üìÉ
  - The custom presets can be selected from the Custom Preset dropdown.
- [X] üíæ **Save Custom Pattern from Program Mode**
  - Now it's easy to save the current pattern as a custom preset when in Program mode.
- [X] ü•Å **New Default Patterns**
  - 35 new patterns fully customizable from txt files.
- [X] üíª **Open Bitwig Console** button
  - Open the Bitwig Console from the BitwigBuddy Settings (Bitwig Dashboard > Settings > Controllers).
- [X] üëÅÔ∏è **Show Advanced GPU Settings** button
  - This is a hidden Bitwig Setting that allows you to change the GPU settings. Useful if you have visual artifacts or performance issues.
- [X] ü§ñ **Macros!** Yes. Macros. ü§ñ
  - Now you can execute pre-defined sequences of actions using macros. These macros are stored as text files and can include both native Bitwig actions and additional custom actions provided by BitwigBuddy.
  - Automate multiple sequence of actions like: Insert a Drum Machine, Insert a Midi File, Insert a Sample, Add Cue Markers, Rename Clips, Change Colors, Duplicate, Cursor Keys...
    - See the complete list of available actions in the manual folder üìÇ.
    - Multiple examples are provided in the Macros folder.
  - Loop an action multiple times!
  - Call a macro from another macro!
  - Macros are stored in the Macros folder inside the BitwigBuddy folder as .txt files. üìÉ
  - Macros can be executed from the BitwigBuddy panel.
  - Save your work before running a macro! Every single action is an undo step! ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è

## 0.9.8 beta | Current Release
- [X] Fixed bug when using _Duplicate Clip_ and _Launch Clip_ together as Post Actions. Now the duplicated clip is the one launched.

## 0.9.8 alpha
- [X] Fixed bug with Custom Presets folder ü§û. Thanks @Cris-- !


## 0.9.7

Edit mode is here! ü•≥

- [X] BeatBuddy becomes BitwigBuddy
- [X] _Random_ became _Program_
- New velocity shapes!
  - Complete list: "Random", "Flat (Value by Min Velocity)", "Linear Inc", "Linear Dec", "Ease Out Cubic Inc", "Ease In Cubic Inc", "Ease Out Cubic Dec", "Ease In Cubic Dec", "Ease InOut Inc", "Ease InOut Dec", "Arc", "Sine", "Cosine", "Double Cosine", "Alternate Min Vel and High Vel", "Alternate High and Min Vel", "Saw 2 Inc", "Saw 2 Dec", "Saw 3 Inc", "Saw 3 Dec", "Saw 4 Inc", "Saw 4 Dec",
            "Triangle", "Square Inc", "Square Dec", "Square 2 Inc", "Square 2 Dec", "Square 3 Inc", "Square 3 Dec", "Square 4 Inc", "Square 4 Dec"
- [X] New Generate/Edit selector
  - In Edit mode, you can apply a velocity shape to the selected steps.
    - If no steps are selected, nothing happens. üò≤
  - More features to come in this section! üöÄ
- [X] Custom presets now load the default note
  - Add a row with _DefaultNote: "D#1"_ to automatically assign that note when the custom preset is selected
- [X] Custom preset folder moved from _Extensions/BeatBuddy_ to _Extensions/BitwigBuddy/Custom Presets_
- [X] Added a _Refresh Custom Presets_ button. This button restarts the extension with the updated custom preset list
- [X] Post Action: _Switch to Edit View Layout_
  - When enabled, your view automatically changes to the Edit View Layout after pattern generation
  - Default: Off
- [X] Preferences: _Show Channel Destination Selector_
  - If enabled, shows the Note MIDI Channel destination (Default: Enabled)
  - When this setting is disabled, the MIDI Channel destination is always 1


## 0.9.0

Another big update! üéâ

New features and improvements:
- [X] Clear Current Note Destination
  - Button to clear the current note destination. This is useful if you want to empty the note lane without generating a new pattern.
- [X] Now the Random pattern are customizable.
  - A text field where all the generated steps are displayed as a string of numbers separated by commas.
  - Min Velocity: The minimum velocity for the the generated steps (1-127)
    - Default is 1
  - Max Velocity: The maximum velocity for the the generated steps (1-127)
    - Default is 127
  - Density: How many steps will be generated in the pattern (1-100%)
    - Default is 50%
    - 50% means 8 steps in a 16 steps pattern
    - 100% means 16 steps in a 16 steps pattern.
    - To mimic the previous behavior, set the density to 75% and the steps quantity to 16 (12 steps will be generated).
  - Steps Quantity: The minimum number of steps in the pattern (1-128)
    - Default is 16
  - Velocity Shape
    - ---DISABLED---
      - All steps will have 127 velocity
    - Random
      - Each step will have a random velocity between Min and Max
    - "Flat (Value by Min Velocity)"
      - All steps will have the Min Velocity
    - Linear Inc
      - The velocity will increase linearly from Min to Max
    - Linear Dec
      - The velocity will decrease linearly from Max to Min
    - Arc
      - The velocity will increase from Min to Max and then decrease from Max to Min
    - Sine
      - The velocity will follow a sine wave shape based on the Min and Max values
    - Cosine
      - The velocity will follow a cosine wave shape. Will start from the Max value, go to the Min value and then back to the Max value.
    - Double Cosine
      - The velocity will follow a double cosine wave shape. Will start from the Min value, go to the Max value, then to the Min value and finally back to the Max value.
    - Alternate Min Vel and High Vel
      - The velocity will alternate between the Min and Max values
    - "Alternate High and Min Vel
      - "The velocity will alternate between the Max and Min values
  - Workflow Idea: Generated patterns are immediately saved in the *Steps* text field after generation. If you want to generate the same pattern again or customize single steps, go to the *Custom Pattern Type*
    - Don't change the *Custom Preset* otherwise the *Steps* field will be overwritten with the Pattern from the Custom Preset.

**Fixes:**
- [x] Fixed a bug that caused a crash if the user tried to generate a pattern outside the possible note range in the Octave 8
- [X] Fixed default Extensions folder for Linux.

**Important NOTE:**
From version 1.0 BeatBuddy will change name.
See this issue for more information:
https://github.com/centomila/BeatBuddy-Bitwig-Extension-MIDI-Drum-Generator/issues/11


## 0.8.0

This is the biggest update so far! üéâ  
Please give me feedback on the new features and let me know if you find any bugs. The custom patterns feature is still a little buggy, so please be careful when using it.  

- [X] Added a Pattern Type Selector with:  
  - Preset Patterns (Default)  
  - Random Patterns (Previously available through the Preset list)  
  - Custom Patterns  
- [X] Added a new feature to use custom patterns in txt format! üìÑ
  - Preference panel  
    - Path of the custom pattern files (default is Documents/Bitwig Studio/Extensions/BeatBuddy)  
    - Button to open the custom patterns folder  
    - Button to browse for a custom patterns folder  
    - Button to reset the custom patterns folder to the default path  
  - Check in the BeatBuddy folder for the file `SampleCustomPreset.txt` to see an example of how to create custom patterns  
    - The file is a simple text file with the following structure:  
      ```
      Name: "Sample Custom Preset"
      DefaultNote: "C1"
      Pattern: [100, 0, 0, 0, 100, 0, 0, 0, 100, 0, 0, 0, 100, 0, 0, 0]
      ```
    - DefaultNote is not yet implemented, but it will be used in the future to set the default note destination for the custom pattern  
- [X] Now the content of the selected pattern is displayed in the UI  
  - The user can edit the pattern directly in the UI (not ideal for long patterns)  
  - Up to 128 steps  
  - 0 means no note, 127 means the maximum velocity  
  - Steps can be separated by any character (comma, space, etc.)  
- [X] Learn Note button to automatically set the note destination based on the last pressed note üéπ  
  - When enabled, the user can click on any note in the piano roll or press a key on the MIDI keyboard to set the note destination  
  - The track needs to be selected  
  - It is not necessary for the track to be armed if you click on the piano roll with the Piano Roll‚Äôs *Audition Notes* option enabled  
  - This is a big improvement for the workflow and is very fun when used in combination with the Random Patterns feature. ü•≥  
- [X] POST Actions üèÅ  
  - Show/Hide Post Actions options üëÅÔ∏è  
  - Added an On/Off option to automatically Zoom To Fit the clip after the pattern is generated üîç  
  - [X] Added an On/Off option to automatically duplicate the clip after the pattern is generated (Clip Launcher only) 2Ô∏è‚É£  
    - Super fun for creating variations of the pattern!  
- [X] Added a Support Section in Preferences  
  - Added a button to open the [GitHub Repository](https://github.com/centomila/BeatBuddy-Bitwig-Extension-MIDI-Drum-Generator) üßë‚Äçüíª  
  - Added a button to open my [Patreon Page](https://www.patreon.com/centomila) üôè  
  - Added a button to open [My Website](https://centomila.com) ü™û  


## 0.7.6
- [X] Code refactoring and split in multiple files. No changes to the bwextension.

## 0.7.5
- [X] Added rotate patterns
  - New buttons to rotate notes left or right
  - Unlike move steps, rotating wraps the notes around (the leftmost note moves to the rightmost position or vice versa)
  - Useful for creating variations of existing patterns
- ‚ö†Ô∏è Note: Move and Rotate operations currently only work with notes on MIDI channel 1. This might be related to a bug in the Bitwig Controller API - investigation is ongoing.


## 0.7.1
- [X] The single line buttons for moving the pattern by one step were causing problems. Now, there are two separate buttons: <<< and >>>.  
  - This fixes the problem of the broken undo action.
- [X] Fixed a bug that caused unpredictable step movement if the length of the individual steps was different.  


## 0.7.0
- [X] Fixed Quintuplets (5t) and Septuplets (7t).
- [X] Added 1/1 step size/note length.
- [X] Added a "Move Steps" button to shift the pattern by one step in the x-direction.
  - ‚ö†Ô∏è This creates a lot of actions! Once done, you will not be able to undo any action prior to the "Move Steps" action.
- [X] Added a "Reverse Pattern" checkbox to reverse the pattern before it is generated.
  - This is not the _Reverse_ or _Reverse Pattern_ action in Bitwig Studio. It simply flips the order of the pattern selected by the user.


## 0.6.2
- [X] Link to github project in the extension panel
- [X] Support for Quintuplets (5t) and Septuplets (7t)

## 0.6.0
- [X] Added more patterns  
- [X] Support for dotted notes in note length and step size  
- [X] Note length now automatically follows the step size  
- [X] The clip is automatically resized to match the pattern length  
  - [X] Option to disable this behavior  
- [X] Button to manually clear the clip completely  
- [X] Extracted some generic methods in Utils class

## 0.5.3
- [X] Added more patterns

## 0.5.2
- [X] Replaced the old method to select note destination with a new method to select note destination based on Note Name+Octave

## 0.5.0
- [X] Support for multiple step sizes and note lengths in the pattern!
  - 1/2  |  1/4  |  1/8  |  1/8  |  1/16  |  1/32  |  1/32  |  1/64  |  1/128
  - 1/2 - 3t  |  1/4 - 3t  | 1/8 - 3t  |  1/16 - 3t  |  1/32 - 3t  |  1/32 - 3t  |  1/64 - 3t  |  1/128 - 3t
- [X] Button to clear the pattern of all notes
- [X] Renamed some fields for clarity
- [X] Tooltip notification with the current note name when the user change the note destination or a MIDI Note number.

## 0.4.5
- [X] Support for clip in the arranger with the _Launcher/Arranger_ option

## 0.4
- [X] Separated fields for changing the note destination  
- [X] Added a Show/Hide button for note destination fields  
- [X] Removed GMDrums as the default note destination selector  
- [X] Removed _Track Cursor_  
- [X] Moved the Generate button to the top of the UI  
- [X] Refactored the code  
- [X] Added Random pattern!